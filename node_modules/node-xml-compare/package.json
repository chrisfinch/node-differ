{
  "name": "node-xml-compare",
  "description": "To compare two xml strings and highlight the differences",
  "author": {
    "name": "Mithun Satheesh."
  },
  "version": "0.1.0",
  "main": "index.js",
  "license": {
    "type": "MIT"
  },
  "dependencies": {
    "sax": ">=0.4.2",
    "underscore": ">=1.4.4"
  },
  "readme": "node-xml-compare\n===========\n\nxml compare is node.js package to compare two xml strings,\nand generate their differences as a html encoded string sothat \nit could be directly duped into a code block in an html page.\n\nDescription\n===========\n\nxml compare is built on top of sax-js. \n[sax-js](https://github.com/isaacs/sax-js/).\n\n\nInstall\n===========\nIt can be installed via.\n\n`npm install node-xml-compare`\n\n\n\nUsage\n=====\n\nTo use this just pass the xml strings you want to compare into the xmlcompare variable.\n\n```javascript\nvar xmlcompare = require('node-xml-compare');\n\nxml1 = \"<sample><a>1</a><a>2</a><a>4</a><b>4</b></sample>\";\nxml2 = \"<sample><a>2</a><a>1</a><a>3</a><c>3</c></sample>\";\n\nxmlcompare(xml1, xml2, function(result) {\n\n\t//render result[-] to html page to show the xml1 nodes that are not in xml2\n\t//render result[+] to html page to show the xml2 nodes that are not in xml1\n\n});\n\n\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "node-xml-compare@0.1.0",
  "_shasum": "a5dbb0a7f4600be80b6de27e21656c9509ba7905",
  "_from": "node-xml-compare@",
  "_resolved": "https://registry.npmjs.org/node-xml-compare/-/node-xml-compare-0.1.0.tgz"
}
